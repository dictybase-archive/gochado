[create_table_temp_gpad]
    CREATE TEMP TABLE temp_gpad (
           digest varchar(28) NOT NULL,
           id varchar(56) NOT NULL,
           goid varchar(30) NOT NULL,
           publication_id varchar(56) NOT NULL,
           pubplace varchar(28) NOT NULL,
           evidence_code varchar(10) NOT NULL,
           assigned_by varchar(15) NOT NULL,
           rank integer NOT NULL,
           date_curated text NOT NULL
    )

[create_table_temp_gpad_qualifier]
    CREATE TEMP TABLE temp_gpad_qualifier (
        digest varchar(28) NOT NULL,
        rank integer NOT NULL,
        qualifier varchar(15) NOT NULL
    )

[create_table_temp_gpad_reference]
    CREATE TEMP TABLE temp_gpad_reference (
           digest varchar(28) NOT NULL,
           pubplace varchar(28) NOT NULL,
           publication_id varchar(56)
    )


[create_table_temp_gpad_withfrom]
    CREATE TEMP TABLE temp_gpad_withfrom (
           digest varchar(28) NOT NULL,
           rank integer NOT NULL,
           withfrom varchar(56) 
    )

[create_table_temp_gpad_extension]
    CREATE TEMP TABLE temp_gpad_extension (
           digest varchar(28) NOT NULL,
           relationship varchar(30) NOT NULL,
           db varchar(15) NOT NULL,
           id varchar(56) NOT NULL
    )


[create_table_temp_gpad_new]
    CREATE TEMP TABLE temp_gpad_new (
           digest varchar(28) NOT NULL,
           feature_id integer NOT NULL,
           cvterm_id integer NOT NULL,
           rank integer NOT NULL,
           pub_id integer NOT NULL,
           is_update integer NOT NULL default 0
    )

[select_only_new_gpad_by_date]
    SELECT temp_gpad.digest, feature.feature_id, cvterm.cvterm_id,
            ngpad.rank, pub.pub_id 
            FROM temp_gpad
            LEFT JOIN 
            (
                SELECT fcvtprop.value FROM
                    feature_cvtermprop fcvtprop
                JOIN cvterm ON
                   cvterm.cvterm_id = fcvtprop.type_id
                JOIN cv ON
                    cv.cv_id = cvterm.cv_id
                WHERE cvterm.name = 'date'
                AND cv.name = 'gene_ontology_association'
            ) dprop ON
            dprop.value = temp_gpad.date_curated
            WHERE dprop.value IS NULL

# The GPAD rows that have changed since the last load are inserted from temp_gpad
# to a new staging table(temp_gpad_new). It is calculated based on LEFT JOIN of date value
# column that will have corresponding NULL value for those record that are absent in
# chado feature_cvtermprop table but present in staging(temp_gpad_new) table.
#   Date(feature_cvtermprop.value scoped by cvterm and cv)
# The feature, cvterm, dbxref and pub tables are joined to make sure the corresponding values
# are loaded in chado and also to extract their primary key for insertion in the
# staging table.
[insert_latest_goa_from_staging]
    INSERT INTO temp_gpad_new(digest, feature_id,
        cvterm_id, rank, pub_id)
        SELECT temp_gpad.digest, feature.feature_id, cvterm.cvterm_id,
            temp_gpad.rank, pub.pub_id 
            FROM temp_gpad
            LEFT JOIN 
            (
                SELECT fcvtprop.value FROM
                    feature_cvtermprop fcvtprop
                JOIN cvterm ON
                   cvterm.cvterm_id = fcvtprop.type_id
                JOIN cv ON
                    cv.cv_id = cvterm.cv_id
                WHERE cvterm.name = 'date'
                AND cv.name = 'gene_ontology_association'
            ) dprop ON
            dprop.value = temp_gpad.date_curated
            JOIN dbxref ON
                temp_gpad.goid = dbxref.accession
            JOIN db ON 
                db.db_id = dbxref.db_id
            JOIN cvterm ON
                cvterm.dbxref_id = dbxref.dbxref_id
            JOIN cv ON
                cv.cv_id = cvterm.cv_id
            JOIN feature ON
                feature.uniquename = temp_gpad.id
            JOIN dbxref evxref ON
                evxref.accession = temp_gpad.evidence_code
            JOIN db evdb ON
                evdb.db_id = evxref.db_id
            JOIN cvterm evterm ON
                evterm.dbxref_id = evxref.dbxref_id
            JOIN cv evcv ON
                evcv.cv_id = evterm.cv_id
            JOIN pub ON (
                pub.uniquename = temp_gpad.publication_id
                AND
                pub.pubplace = temp_gpad.pubplace
            )
            WHERE db.name = 'GO'
            AND cv.name IN ('biological_process', 'molecular_function', 'cellular_component')
            AND dprop.value IS NULL
            AND evcv.name = 'eco'
            AND evdb.name = 'ECO'


# The SQL statement below selects new GPAD entries since the last load.
# It will select the following columns from staging(temp_gpad_new)
# to create new rows in feature_cvterm
# chado table.
#   feature.feature_id
#   cvterm.cvterm_id
#   pub.pub_id
#   temp_gpad.rank
[insert_feature_cvterm]
    INSERT INTO feature_cvterm(feature_id, cvterm_id, rank, pub_id)
        SELECT feature_id, cvterm_id, rank, pub_id 
            FROM temp_gpad_new

# The feature_cvterm_id comes from joining feature_id and cvterm_id from temp_gpad_new table.
# The type_id comes from joining temp_gpad evidence_code column with the cvterm of eco cv in chado table.
# There is no specific data for value, so it is set to 1
[insert_feature_cvtermprop_evcode]
    INSERT INTO feature_cvtermprop(feature_cvterm_id, type_id, value)
        SELECT fcvt.feature_cvterm_id,cvterm.cvterm_id, 1
            FROM feature_cvterm fcvt 
            JOIN temp_gpad_new ON 
            (
                temp_gpad_new.feature_id = fcvt.feature_id
                AND
                temp_gpad_new.cvterm_id = fcvt.cvterm_id
                AND 
                temp_gpad_new.pub_id = fcvt.pub_id
                AND
                temp_gpad_new.rank = fcvt.rank
            )
            JOIN temp_gpad ON
                temp_gpad.digest = temp_gpad_new.digest
            JOIN dbxref ON
                dbxref.accession = temp_gpad.evidence_code
            JOIN db ON 
                db.db_id = dbxref.db_id
            JOIN cvterm ON
                cvterm.dbxref_id = dbxref.dbxref_id
            JOIN cv ON
                cv.cv_id = cvterm.cv_id
            AND db.name = 'ECO'
            AND cv.name = 'eco'

# The feature_cvterm_id is identical to previous one. The type_id comes from a custom cv namespace
# exclusive for GPAD. The value and rank comes from temp_gpad_qualifier after joining with temp_gpad_new.
[insert_feature_cvtermprop_qualifier]
    INSERT INTO feature_cvtermprop(feature_cvterm_id, type_id, value, rank)
        SELECT fcvt.feature_cvterm_id,
            (SELECT cvterm_id FROM cvterm JOIN cv 
                ON cv.cv_id = cvterm.cv_id
                WHERE cv.name = $1
                AND cvterm.name = 'qualifier'
            ),
            tgq.qualifier,
            tgq.rank
            JOIN temp_gpad_new ON 
            (
                temp_gpad_new.feature_id = fcvt.feature_id
                AND
                temp_gpad_new.cvterm_id = fcvt.cvterm_id
                AND 
                temp_gpad_new.pub_id = fcvt.pub_id
                AND
                temp_gpad_new.rank = fcvt.rank
            )
            JOIN temp_gpad_qualifier tgq ON
                tgq.digest = temp_gpad_new.digest

# The data of value column comes from temp_gpad after joining with temp_gpad_new.
[insert_feature_cvtermprop_date]
    INSERT INTO feature_cvtermprop(feature_cvterm_id, type_id, value)
        SELECT fcvt.feature_cvterm_id,
            (SELECT cvterm_id FROM cvterm JOIN cv 
                ON cv.cv_id = cvterm.cv_id
                WHERE cv.name = $1
                AND cvterm.name = 'date'
            ),
            temp_gpad.date_curated 
            FROM feature_cvterm fcvt 
            JOIN temp_gpad_new ON 
            (
                temp_gpad_new.feature_id = fcvt.feature_id
                AND
                temp_gpad_new.cvterm_id = fcvt.cvterm_id
                AND 
                temp_gpad_new.pub_id = fcvt.pub_id
                AND
                temp_gpad_new.rank = fcvt.rank
            )
            JOIN temp_gpad ON
                temp_gpad.digest = temp_gpad_new.digest


# The data of value column comes from temp_gpad after joining with temp_gpad_new.
[insert_feature_cvtermprop_assigned_by]
    INSERT INTO feature_cvtermprop(feature_cvterm_id, type_id, value)
        SELECT fcvt.feature_cvterm_id,
            (SELECT cvterm_id FROM cvterm JOIN cv 
                ON cv.cv_id = cvterm.cv_id
                WHERE cv.name = $1
                AND cvterm.name = 'source'
            ),
            temp_gpad.assigned_by 
            FROM feature_cvterm fcvt 
            JOIN temp_gpad_new ON 
            (
                temp_gpad_new.feature_id = fcvt.feature_id
                AND
                temp_gpad_new.cvterm_id = fcvt.cvterm_id
                AND 
                temp_gpad_new.pub_id = fcvt.pub_id
                AND
                temp_gpad_new.rank = fcvt.rank
            )
            JOIN temp_gpad ON
                temp_gpad.digest = temp_gpad_new.digest
 

[insert_feature_cvtermprop_withfrom]
    INSERT INTO feature_cvtermprop(feature_cvterm_id, type_id, value, rank)
        SELECT fcvt.feature_cvterm_id,
            (SELECT cvterm_id FROM cvterm JOIN cv 
                ON cv.cv_id = cvterm.cv_id
                WHERE cv.name = $1
                AND cvterm.name = 'with'
            ),
            tgw.withfrom,
            tgw.rank
            JOIN temp_gpad_new ON 
            (
                temp_gpad_new.feature_id = fcvt.feature_id
                AND
                temp_gpad_new.cvterm_id = fcvt.cvterm_id
                AND 
                temp_gpad_new.pub_id = fcvt.pub_id
                AND
                temp_gpad_new.rank = fcvt.rank
            )
            JOIN temp_gpad_withfrom tgw ON
                tgw.digest = temp_gpad_new.digest

[insert_feature_cvterm_pub_reference]
    INSERT INTO feature_cvterm_pub(feature_cvterm_id,pub_id)
        SELECT fcvt.feature_cvterm_id,pub.pub_id
            FROM feature_cvterm fcvt 
            JOIN temp_gpad_new ON 
            (
                temp_gpad_new.feature_id = fcvt.feature_id
                AND
                temp_gpad_new.cvterm_id = fcvt.cvterm_id
                AND 
                temp_gpad_new.pub_id = fcvt.pub_id
                AND
                temp_gpad_new.rank = fcvt.rank
            )
            JOIN temp_gpad_reference ON
                temp_gpad_reference.digest = temp_gpad_new.digest
            JOIN pub ON (
                pub.uniquename = temp_gpad_reference.publication_id
                AND
                pub.pubplace = temp_gpad_reference.pubplace
            )
